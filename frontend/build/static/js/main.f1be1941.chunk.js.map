{"version":3,"sources":["components/TileSelector.js","api/materialsApi.js","components/RuraSelection.js","components/AddWeightForm.js","api/axiosInstance.js","components/RecentEntries.js","pages/HomePage.js","api/containersApi.js","components/ContainerTile.jsx","pages/SummaryPage.jsx","components/Navbar.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["TileSelector","_ref","label","options","selectedValue","onSelect","React","createElement","style","display","flexWrap","justifyContent","gap","marginTop","map","option","key","value","onClick","padding","fontSize","backgroundColor","color","border","borderRadius","cursor","boxShadow","transition","onMouseOver","e","target","onMouseOut","fetchMaterials","async","response","fetch","json","RuraSelection","selectedType","setSelectedType","selectedMaterial","setSelectedMaterial","selectedSize","setSelectedSize","aluminiumSubtypes","setAluminiumSubtypes","useState","showAluminiumSubtypes","setShowAluminiumSubtypes","selectedAluminiumSubtype","setSelectedAluminiumSubtype","useEffect","then","data","aluminiumOptions","filter","material","startsWith","console","log","availableSizes","getAvailableSizes","textAlign","marginBottom","AddWeightForm","onSubmit","weight","setWeight","error","setError","loading","setLoading","tares","setTares","selectedTare","setSelectedTare","finalWeight","setFinalWeight","axios","get","catch","preventDefault","parseFloat","weightToSend","weight_kg","containerData","shape","size","err","flexDirection","alignItems","type","onChange","placeholder","className","width","height","paddingLeft","paddingRight","paddingTop","paddingBottom","tare","id","handleTareClick","name","axiosInstance","create","baseURL","timeout","headers","Content-Type","X-Requested-With","withCredentials","RecentEntries","entries","refreshEntries","materialMap","setMaterialMap","sizeMap","setSizeMap","materials","forEach","m","shapes","Set","fetchAllSizes","allSizes","Promise","all","s","sizes","fetchSizesForShape","newSizeMap","entry","_allSizes$find","_shapeSizes$find","sizeLabel","find","sz","size_label","length","listStyleType","isoString","Date","toLocaleString","year","month","day","hour","minute","formatDate","created_at","delete","deleteEntry","HomePage","setEntries","fetchEntries","recent","slice","reverse","savedEntry","post","addWeightEntry","alert","ContainerTile","onDelete","numericWeight","tileStyle","margin","position","top","right","background","SummaryPage","fetchData","index","material_name","size_id","total_weight_kg","total_weight","method","ok","handleDelete","Navbar","src","alt","Footer","App","Router","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.f1be1941.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst TileSelector = ({ label, options, selectedValue, onSelect }) => {\r\n  return (\r\n    <div style={{ \r\n            display: 'flex', \r\n            flexWrap: 'wrap',\r\n            justifyContent: 'center', // <== ŚRODKOWANIE\r\n            gap: '22px',              // <== ODSTĘPY MIĘDZY KAFELKAMI\r\n            marginTop: '12px',\r\n            }}>\r\n      <h3>{label}</h3>\r\n      <div style={{ display: 'flex', flexWrap: 'wrap', gap: '22px', marginTop: '22px', justifyContent: 'center',}}>\r\n        {options.map(option => (\r\n          <div\r\n            key={option.value}\r\n            onClick={() => onSelect(option.value)}\r\n            style={{\r\n                padding: '32px 50px',\r\n                fontSize: '1.0rem',\r\n                backgroundColor: selectedValue === option.value ? '#0056b3' : '#007bff',\r\n                color: 'white',\r\n                border: 'none',\r\n                borderRadius: '8px',\r\n                cursor: 'pointer',\r\n                boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)',\r\n                transition: 'background-color 0.3s ease'\r\n            }}\r\n            onMouseOver={(e) => {\r\n                e.target.style.backgroundColor = '#ff8400';\r\n            }}\r\n\r\n            onMouseOut={(e) => {\r\n              if (selectedValue === option.value) {\r\n                e.target.style.backgroundColor = '#0056b3'; // Zostaje ciemniejszy\r\n              } else {\r\n                e.target.style.backgroundColor = '#007bff'; // Wraca do jaśniejszego\r\n              }\r\n            }}\r\n          >\r\n            {option.label}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TileSelector;\r\n","export const fetchMaterials = async () => {\r\n  const response = await fetch('https://zlom-app.onrender.com/api/materials/');\r\n  const data = await response.json();\r\n  return data;\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport TileSelector from './TileSelector';\r\nimport { fetchMaterials } from '../api/materialsApi';\r\n\r\nconst RuraSelection = ({ \r\n  selectedType, \r\n  setSelectedType, \r\n  selectedMaterial, \r\n  setSelectedMaterial,\r\n  selectedSize,  \r\n  setSelectedSize \r\n}) => {\r\n  const [aluminiumSubtypes, setAluminiumSubtypes] = useState([]);\r\n  const [showAluminiumSubtypes, setShowAluminiumSubtypes] = useState(false);\r\n  const [selectedAluminiumSubtype, setSelectedAluminiumSubtype] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetchMaterials().then(data => {\r\n      const aluminiumOptions = data.filter(material => material.value.startsWith('AL'));\r\n      console.log(\"Aluminium subtypes:\", aluminiumOptions);\r\n      setAluminiumSubtypes(aluminiumOptions);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setSelectedSize('');\r\n  }, [selectedType, setSelectedSize]);\r\n\r\n  const getAvailableSizes = () => {\r\n    switch (selectedType) {\r\n      case 'ROUND':\r\n        return [\r\n          { value: '1', label: 'Fi22' },\r\n          { value: '2', label: 'Fi25' },\r\n          { value: '3', label: 'Fi30' },\r\n          { value: '4', label: 'Fi40' },\r\n          { value: '5', label: 'Fi50' },\r\n        ];\r\n      case 'SQUARE':\r\n        return [\r\n          { value: '6', label: '40x40' },\r\n          { value: '7', label: '25x25' },\r\n          { value: '8', label: '30x30' },\r\n        ];\r\n      case 'RECT':\r\n        return [\r\n          { value: '9', label: '30x10' },\r\n          { value: '10', label: '40x10' },\r\n          { value: '11', label: '40x20' },\r\n          { value: '12', label: '50x25' },\r\n        ];\r\n      case 'D_Shape':\r\n        return [\r\n          { value: '13', label: 'Marcepan' },\r\n        ];\r\n      default:\r\n        return [];\r\n    }\r\n  };\r\n\r\n  const availableSizes = getAvailableSizes();\r\n\r\n  return (\r\n    <div>\r\n      <TileSelector \r\n        label=\"\" \r\n        options={[\r\n          { value: 'ROUND', label: 'Okrągła' },\r\n          { value: 'SQUARE', label: 'Kwadratowa' },\r\n          { value: 'RECT', label: 'Prostokątny' },\r\n          { value: 'D_Shape', label: 'Marcepan' },\r\n        ]}\r\n        selectedValue={selectedType}\r\n        onSelect={setSelectedType}\r\n      />\r\n      \r\n      {selectedType && (\r\n        <TileSelector \r\n          label=\"\" \r\n          options={availableSizes}\r\n          selectedValue={selectedSize}\r\n          onSelect={setSelectedSize}\r\n        />\r\n      )}\r\n      \r\n      <TileSelector \r\n        label=\"\" \r\n        options={[\r\n          { value: 'AL', label: 'Aluminium' },\r\n          { value: 'A304', label: '304' },\r\n          { value: 'A316', label: '316' },\r\n          { value: 'MS', label: 'Mosiądz' },\r\n        ]}\r\n        selectedValue={selectedMaterial}\r\n        onSelect={(value) => {\r\n          setSelectedMaterial(value);\r\n          setShowAluminiumSubtypes(value === 'AL');\r\n        }}\r\n      />\r\n\r\n      {showAluminiumSubtypes && (\r\n        <div style={{ textAlign: 'center', marginBottom: '5px' }}>\r\n            <h3>Wybierz typ aluminium</h3>\r\n        \r\n        <TileSelector\r\n          options={aluminiumSubtypes}\r\n          selectedValue={selectedAluminiumSubtype}\r\n          onSelect={(value) => {\r\n      // Zaktualizowanie stanu selectedAluminiumSubtype, żeby podświetlić kafelek\r\n            setSelectedAluminiumSubtype(value);\r\n      \r\n      // Zaktualizowanie stanu selectedMaterial, aby przesłać ten wybrany materiał do backendu\r\n            setSelectedMaterial(value);\r\n    }}\r\n        />\r\n    </div>        \r\n      )}\r\n      \r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RuraSelection;\r\n","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst AddWeightForm = ({ selectedType, selectedMaterial, selectedSize, onSubmit }) => {\r\n  const [weight, setWeight] = useState('');\r\n  const [error, setError] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [tares, setTares] = useState([]);\r\n  const [selectedTare, setSelectedTare] = useState(null);\r\n  const [finalWeight, setFinalWeight] = useState(0);\r\n    \r\n  useEffect(() => {\r\n    // Pobierz dostępne tary z API\r\n    axios.get('https://zlom-app.onrender.com/api/tares/')\r\n      .then(response => {\r\n        setTares(response.data);\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching tares:', error);\r\n      });\r\n  }, []);\r\n\r\n  const handleTareClick = (tare) => {\r\n    setSelectedTare(tare); // Ustaw wybraną tarę\r\n    setFinalWeight(weight - tare.weight_kg); // Pomniejsz wagę o wartość tary\r\n  };\r\n\r\n  const handleWeightChange = (e) => {\r\n    setWeight(e.target.value); // Zmienna wagi\r\n    if (selectedTare) {\r\n      setFinalWeight(e.target.value - selectedTare.weight_kg); // Pomniejsz wagę po zmianie\r\n    }\r\n  };\r\n    \r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    console.log('Kliknięto Dodaj wagę');\r\n    const weightNum = parseFloat(weight);\r\n    const weightToSend = selectedTare ? weight - selectedTare.weight_kg : weight;\r\n\r\n    try {\r\n      const containerData = {\r\n        weight_kg: weightToSend,\r\n        material: selectedMaterial,\r\n        shape: selectedType,\r\n        size: selectedSize,\r\n      };\r\n\r\n      console.log('📦 Wysyłane dane:', containerData);\r\n\r\n      await onSubmit(containerData);  // Wywołujemy onSubmit, który będzie przekazywał dane do głównego komponentu\r\n      setWeight('');\r\n    } catch (err) {\r\n      console.error('Błąd podczas dodawania wagi:', err);\r\n      setError('Błąd podczas dodawania wagi');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\nreturn (\r\n    <div>\r\n      <form onSubmit={handleSubmit}\r\n        style={{\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center', // Wyśrodkowanie w poziomie\r\n        justifyContent: 'center',// Wyśrodkowanie w pionie\r\n        marginTop: '30px',\r\n        }}\r\n        >\r\n\r\n          <p></p>\r\n          <input\r\n            type=\"number\"\r\n            value={weight}\r\n            onChange={handleWeightChange}\r\n            placeholder=\"Wpisz wagę\"\r\n            className=\"rounded-md border border-gray-300 px-4 py-2 shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-400 focus:border-transparent\"\r\n            style={{\r\n                width: '300px',  // Szerokość inputa\r\n                height: '50px',  // Wysokość inputa\r\n                paddingLeft: '15px',  // Zwiększenie paddingu od lewej\r\n                paddingRight: '15px',  // Zwiększenie paddingu od prawej\r\n                paddingTop: '10px',   // Zwiększenie paddingu od góry\r\n                paddingBottom: '10px',\r\n                fontSize: '1.5rem',\r\n  }}\r\n          />\r\n        \r\n        \r\n        <div style={{ \r\n            display: 'flex', \r\n            flexDirection: 'column', // <== ŚRODKOWANIE\r\n            alignItems: 'center',              // <== ODSTĘPY MIĘDZY KAFELKAMI\r\n            marginTop: '12px', }}>\r\n          <h3>Wybierz tarę:</h3>\r\n\r\n          <div style={{ \r\n            display: 'flex', \r\n            flexWrap: 'wrap',\r\n            justifyContent: 'center', // <== ŚRODKOWANIE\r\n            gap: '22px',              // <== ODSTĘPY MIĘDZY KAFELKAMI\r\n            marginTop: '12px',\r\n            }}>\r\n    \r\n            {tares.map(tare => (\r\n              <div\r\n                key={tare.id}\r\n                style={{\r\n\r\n                padding: '12px 24px',\r\n                fontSize: '0.9rem',\r\n                backgroundColor: selectedTare?.id === tare.id ? '#0056b3' : '#007bff',\r\n                color: 'white',\r\n                border: 'none',\r\n                borderRadius: '8px',\r\n                cursor: 'pointer',\r\n                boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)',\r\n                transition: 'background-color 0.3s ease'\r\n            }}\r\n            onMouseOver={(e) => {\r\n                e.target.style.backgroundColor = '#ff8400';\r\n            }}\r\n\r\n            onMouseOut={(e) => {\r\n              if (selectedTare?.id === tare.id) {\r\n                e.target.style.backgroundColor = '#0056b3'; // Zostaje ciemniejszy\r\n              } else {\r\n                e.target.style.backgroundColor = '#007bff'; // Wraca do jaśniejszego\r\n              }\r\n            }}\r\n            onClick={() => handleTareClick(tare)}\r\n              >\r\n                {tare.name}\r\n                {/* <p>{tare.weight_kg} kg</p> */}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        <button\r\n            type=\"submit\"\r\n            style={{\r\n                marginTop: '62px',  \r\n                padding: '12px 24px',\r\n                fontSize: '1.2rem',\r\n                backgroundColor: '#ff8400',\r\n                color: 'white',\r\n                border: 'none',\r\n                borderRadius: '8px',\r\n                cursor: 'pointer',\r\n                boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)',\r\n                transition: 'background-color 0.3s ease'\r\n            }}\r\n            onMouseOver={(e) => (e.target.style.backgroundColor = '#0056b3')}\r\n            onMouseOut={(e) => (e.target.style.backgroundColor = '#ff8400')}\r\n            >\r\n                         Dodaj wagę\r\n                    </button>\r\n      </form>\r\n\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddWeightForm;\r\n","import axios from 'axios';\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL: 'https://zlom-app.onrender.com/api/',\r\n  timeout: 5000,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n    'X-Requested-With': 'XMLHttpRequest',\r\n  },\r\n  withCredentials: true, // jeśli korzystasz z sesji lub cookies\r\n});\r\n\r\nexport default axiosInstance;\r\n","import React, { useEffect, useState } from 'react';\r\nimport axios from '../api/axiosInstance';\r\nimport { fetchMaterials } from '../api/materialsApi';\r\n\r\nconst formatDate = (isoString) => {\r\n  const date = new Date(isoString);\r\n  return date.toLocaleString('pl-PL', {\r\n    year: 'numeric',\r\n    month: '2-digit',\r\n    day: '2-digit',\r\n    hour: '2-digit',\r\n    minute: '2-digit'\r\n  });\r\n};\r\n\r\nconst RecentEntries = ({ entries, refreshEntries }) => {\r\n  const [materialMap, setMaterialMap] = useState({});\r\n  const [sizeMap, setSizeMap] = useState({});\r\n\r\n  useEffect(() => {\r\n    fetchMaterials().then(materials => {\r\n      const map = {};\r\n      materials.forEach(m => {\r\n        map[m.value] = m.label;\r\n      });\r\n      setMaterialMap(map);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Dla każdego unikalnego shape w entries robimy fetch do backendu\r\n    const shapes = [...new Set(entries.map(e => e.shape))];\r\n\r\n    const fetchSizesForShape = async (shape) => {\r\n      try {\r\n        const response = await axios.get(`/get-sizes/?shape=${shape}`);\r\n        // response.data to lista obiektów: { id, size_label }\r\n        return { shape, sizes: response.data };\r\n      } catch (error) {\r\n        console.error(`Błąd pobierania rozmiarów dla shape=${shape}:`, error);\r\n        return { shape, sizes: [] };\r\n      }\r\n    };\r\n\r\n    const fetchAllSizes = async () => {\r\n      const allSizes = await Promise.all(shapes.map(s => fetchSizesForShape(s)));\r\n      const newSizeMap = {};\r\n\r\n      entries.forEach(entry => {\r\n        const shapeSizes = allSizes.find(s => s.shape === entry.shape)?.sizes || [];\r\n        // Szukamy rozmiaru po id (w entry.size mamy id)\r\n        const sizeLabel = shapeSizes.find(sz => sz.id === entry.size)?.size_label || entry.size;\r\n        newSizeMap[`${entry.shape}_${entry.size}`] = sizeLabel;\r\n      });\r\n\r\n      setSizeMap(newSizeMap);\r\n    };\r\n\r\n    if (shapes.length > 0) {\r\n      fetchAllSizes();\r\n    }\r\n  }, [entries]);\r\n\r\n  const deleteEntry = async (id) => {\r\n    try {\r\n      await axios.delete(`/containers/${id}/`);\r\n      refreshEntries();\r\n    } catch (error) {\r\n      console.error('Błąd podczas usuwania wpisu:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"recent-entries\">\r\n      \r\n      <ul style={{ listStyleType: 'none', paddingLeft: 0 }}>\r\n        {entries.map(entry => (\r\n          <li key={entry.id}>\r\n            {materialMap[entry.material] || entry.material} – {sizeMap[`${entry.shape}_${entry.size}`] || entry.size} – {\" \"}\r\n            {entry.weight_kg} kg –  {\" \"}\r\n            {formatDate(entry.created_at)} {\"   \"}\r\n            <button \r\n            style={{\r\n                marginTop: '10px',  \r\n                padding: '7px 10px',\r\n                fontSize: '0.8rem',\r\n                backgroundColor: '#ff1900',\r\n                color: 'white',\r\n                border: 'none',\r\n                borderRadius: '8px',\r\n                cursor: 'pointer',\r\n                boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)',\r\n                transition: 'background-color 0.3s ease'\r\n            }}\r\n            onClick={() => deleteEntry(entry.id)}>Usuń</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RecentEntries;\r\n","import React, { useState, useEffect } from 'react';\r\nimport RuraSelection from '../components/RuraSelection';\r\nimport AddWeightForm from '../components/AddWeightForm';\r\nimport RecentEntries from '../components/RecentEntries';\r\nimport { addWeightEntry } from '../api/containersApi';\r\nimport axios from '../api/axiosInstance';\r\n\r\nconst HomePage = () => {\r\n  console.log('✅ Komponent HomePage został załadowany');\r\n\r\n  useEffect(() => {\r\n    axios.get('csrf/').then(() => {\r\n      console.log('✅ CSRF token pobrany i ustawiony w ciasteczkach');\r\n    }).catch((err) => {\r\n      console.error('❌ Błąd podczas pobierania CSRF tokena:', err);\r\n    });\r\n  }, []);\r\n\r\n  const [selectedType, setSelectedType] = useState('');\r\n  const [selectedMaterial, setSelectedMaterial] = useState('');\r\n  const [entries, setEntries] = useState([]);\r\n  const [selectedSize, setSelectedSize] = useState(\"\");\r\n\r\n  // Dodajemy fetchEntries do pobierania wpisów\r\n  const fetchEntries = async () => {\r\n    try {\r\n      const response = await axios.get('/containers/');\r\n      const recent = response.data.slice(-5).reverse();\r\n      setEntries(recent);\r\n    } catch (error) {\r\n      console.error('Błąd podczas pobierania wpisów:', error);\r\n    }\r\n  };\r\n\r\n  // Wczytaj wpisy przy starcie\r\n  useEffect(() => {\r\n    fetchEntries();\r\n  }, []);\r\n\r\n  const handleAddWeight = async (containerData) => {\r\n    console.log(\"Dodano wagę:\", containerData);\r\n    \r\n    try {\r\n      // Wysłanie danych do API\r\n      const savedEntry = await addWeightEntry(containerData);\r\n      \r\n      // Po udanej wysyłce, dodajemy nowy wpis do lokalnego stanu\r\n      setEntries([savedEntry, ...entries.slice(0, 4)]);\r\n    } catch (error) {\r\n      console.error('Błąd przy dodawaniu wagi:', error);\r\n      alert('Nie udało się zapisać danych. Sprawdź połączenie z backendem.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <RuraSelection\r\n        selectedType={selectedType}\r\n        setSelectedType={setSelectedType}\r\n        selectedMaterial={selectedMaterial}\r\n        setSelectedMaterial={setSelectedMaterial}\r\n        selectedSize={selectedSize}\r\n        setSelectedSize={setSelectedSize}\r\n      />\r\n      <AddWeightForm\r\n        selectedType={selectedType}\r\n        selectedMaterial={selectedMaterial}\r\n        selectedSize={selectedSize}\r\n        onSubmit={handleAddWeight}\r\n      />\r\n      <RecentEntries entries={entries} refreshEntries={fetchEntries} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","// src/api/containersApi.js\r\nimport axiosInstance from './axiosInstance'; // Importujemy instancję Axios\r\n\r\n// Pobieranie wszystkich pojemników\r\nexport const getContainers = async () => {\r\n  try {\r\n    const response = await axiosInstance.get('containers/');\r\n    return response.data; // Zwracamy dane po pobraniu\r\n  } catch (error) {\r\n    console.error('Błąd przy pobieraniu pojemników:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Dodawanie nowego pojemnika\r\nexport const addContainer = async (newContainer) => {\r\n  try {\r\n    console.log(\"Wysyłane dane:\", newContainer); //debug dane\r\n    const response = await axiosInstance.post('containers/', newContainer);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Błąd przy dodawaniu pojemnika:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n//Dodawanie wagi\r\n\r\nexport const addWeightEntry = async (entry) => {\r\n  const response = await axiosInstance.post('containers/', entry); //zmiana bez /add\r\n  return response.data;\r\n};\r\n\r\n//Dodawanie wagi\r\n\r\nexport const addWeightEntry2 = async (entry) => {\r\n  const response = await axiosInstance.post('containers/', entry); //zmiana bez /add\r\n  return response.data;\r\n};\r\n\r\n\r\n// Aktualizacja wagi pojemnika\r\nexport const updateContainerWeight = async (id, weight) => {\r\n  try {\r\n    const response = await axiosInstance.put(`containers/${id}/`, { weight });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Błąd przy aktualizacji wagi pojemnika:', error);\r\n    throw error;\r\n  }\r\n};\r\n","import React from 'react';\r\n\r\nconst ContainerTile = ({ material, shape, weight, onDelete }) => {\r\n  const numericWeight = parseFloat(weight);\r\n\r\n  let backgroundColor;\r\n  if (numericWeight === 0) {\r\n    backgroundColor = 'green';\r\n  } else if (numericWeight > 0 && numericWeight < 10) {\r\n    backgroundColor = 'yellow';\r\n  } else {\r\n    backgroundColor = 'red';\r\n  }\r\n\r\n  const tileStyle = {\r\n    backgroundColor,\r\n    color: backgroundColor === 'yellow' ? 'black' : 'white',\r\n    padding: '20px',\r\n    margin: '10px',\r\n    borderRadius: '8px',\r\n    textAlign: 'center',\r\n    width: '200px',\r\n    position: 'relative',\r\n  };\r\n\r\n  const buttonStyle = {\r\n    position: 'absolute',\r\n    top: '5px',\r\n    right: '5px',\r\n    background: 'black',\r\n    color: 'white',\r\n    border: 'none',\r\n    borderRadius: '4px',\r\n    cursor: 'pointer',\r\n    padding: '5px 8px',\r\n  };\r\n\r\n  return (\r\n    <div style={tileStyle}>\r\n      <button style={buttonStyle} onClick={onDelete}>Złomuj</button>\r\n      <h3>{material}</h3>\r\n      <p>Przekrój: {shape}</p>\r\n      <p>Waga: {weight} kg</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContainerTile;\r\n","import React, { useEffect, useState } from 'react';\r\nimport ContainerTile from '../components/ContainerTile';\r\n\r\nconst SummaryPage = () => {\r\n  const [entries, setEntries] = useState([]);\r\n\r\n  const fetchData = () => {\r\n    fetch('https://zlom-app.onrender.com/api/containers/summary/')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        console.log('Dane z nowego API:', data);\r\n        setEntries(data);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const handleDelete = (id) => {\r\n    fetch(`https://zlom-app.onrender.com/api/entries/${id}/delete/`, {\r\n      method: 'DELETE',\r\n    })\r\n      .then(response => {\r\n        if (response.ok) {\r\n          // odśwież dane\r\n          fetchData();\r\n        } else {\r\n          alert('Nie udało się usunąć wpisu.');\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div style={{ display: 'flex', flexWrap: 'wrap' }}>\r\n      {entries.map((entry, index) => (\r\n        <ContainerTile\r\n          key={index}\r\n          material={entry.material_name || entry.material}\r\n          shape={entry.size_label || entry.size_id}\r\n          weight={entry.total_weight_kg || entry.total_weight}\r\n          onDelete={() => handleDelete(entry.id)}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SummaryPage;\r\n","import React from 'react';\r\n\r\nconst Navbar = () => (\r\n  <nav className=\"navbar bg-dark text-white p-3\">\r\n    <img src=\"/logobiale.png\" alt=\"Logo\" style={{ height: '100px' }} />  {/* Ścieżka do public */}\r\n  </nav>\r\n);\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\n\r\nconst Footer = () => (\r\n  <footer className=\"bg-light text-center p-3\">\r\n    <p>© 2025 Rura-Złom App. Wszelkie prawa zastrzeżone.</p>\r\n  </footer>\r\n);\r\n\r\nexport default Footer;","import React from 'react';\r\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\nimport HomePage from './pages/HomePage';\r\nimport SummaryPage from './pages/SummaryPage';\r\nimport Navbar from './components/Navbar';\r\nimport Footer from './components/Footer';\r\n\r\nconst App = () => (\r\n  <Router>\r\n    <Navbar />\r\n    <main className=\"container my-4\">\r\n      <Routes>\r\n        <Route path=\"/summary\" element={<SummaryPage />} />\r\n        <Route path=\"/\" element={<HomePage />} />\r\n      </Routes>\r\n    </main>\r\n    <Footer />\r\n  </Router>\r\n);\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}